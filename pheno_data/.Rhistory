library(tools)
library(xtable)
install.packages("xtable")
library(xtable)
options(SweaveSyntax="SweaveSyntaxNoweb")
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
rstan_options(auto_write = TRUE)
library(rstan)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
library(reshape2)  # For switching between long-form and wide-form data
library(ggplot2)  # For the posterior predictive model checking example
library(gridExtra)  # Also for the posterior predictive model checking example
library(devtools)
install_github("danielcfurr/edstan")
install.packages("devtools")
library(devtools)
install_github("danielcfurr/edstan")
# Load edstan
library(edstan)
preview_rows <- seq(from = 1, to = nrow(spelling), length.out = 10)
spelling[preview_rows, ]
par_bkp <- par(no.readonly = TRUE)
par(mfrow = c(1, 2))
# Left plot
person_scores <- apply(spelling[, 2:5], 1, sum)
person_counts <- table(person_scores)
barplot(person_counts, main = "Raw score distribution", xlab = "Raw score",
ylab = "Number of persons")
# Right plot
item_scores <- apply(spelling[, 2:5], 2, mean)
barplot(item_scores, main = "Proportion correct by item", ylab = "Proportion correct",
ylim = c(0, 1), xaxt = "n")
# x-axis with angled labels
text(x = 0.85 + (1:length(item_scores) - 1) * 1.2, y = -0.05, labels = names(item_scores),
xpd = TRUE, srt = 30, pos = 2)
# Return to previous plot presets
par(par_bkp)
rm(list=ls())
options(stringsAsFactors = FALSE)
## R code 8.1
num_weeks <- 1e5
positions <- rep(0,num_weeks); positions
current <- 10
for ( i in 1:num_weeks ) {
# record current position
positions[i] <- current
# flip coin to generate proposal
proposal <- current + sample( c(-1,1) , size=1 )
# now make sure he loops around the archipelago
if ( proposal < 1 ) proposal <- 10
if ( proposal > 10 ) proposal <- 1
# move?
prob_move <- proposal/current
current <- ifelse( runif(1) < prob_move , proposal , current )
}
## R code 8.2
library(rethinking)
data(rugged)
d <- rugged
d$log_gdp <- log(d$rgdppc_2000)
#here we are reducing the df from 200+ obs to just the ones we have nations for 170 0bs
dd <- d[ complete.cases(d$rgdppc_2000) , ]
mod.cont <- map2stan(
alist(
sleep_total ~ dnorm( mu , sigma ) ,
mu <- a + bbrain*brainwt + bbody*bodywt ,
a ~ dnorm(0,100),
bbrain ~ dnorm(0,10),
bbody ~ dnorm(0,10),
sigma ~ dunif(0,10)
) ,
data=msleep.final )
#A list of Stan warnings
rm(list=ls())
options(stringsAsFactors = FALSE)
msleep<-as.data.frame(msleep)
head(msleep)
str(msleep)
#Research Question:
#How well does vore, brainwt, sleep_cycle predict total sleep
msleep$vore
#Start by making a dummy variable for vore
msleep$v_omni <- ifelse( msleep$vore=="omni" , 1 , 0 )
msleep$v_carni <- ifelse( msleep$vore=="carni" , 1 , 0 )
msleep$v_insecti <- ifelse( msleep$vore=="insecti" , 1 , 0 )
#scale the continuous data
msleep$s_brainwt<-scale(msleep$brainwt); msleep$s_brainwt
msleep$s_bodywt<-scale(msleep$bodywt)
msleep$s_sleep_total<-scale(msleep$sleep_total)
head(msleep)
#1. Trim unneeded columns
# msleep.tm <- msleep[ , c("v_omni","v_carni","v_insecti","s_brainwt","s_bodywt","s_sleep_total") ]
# head(msleep.tm)
# str(msleep.tm)
msleep.tm <- msleep[ , c("v_omni","v_carni","v_insecti","brainwt","bodywt","sleep_total") ]
head(msleep.tm)
str(msleep.tm)
#2. Select for complete cases
msleep.final <- msleep.tm[ complete.cases(msleep.tm) , ]
str(msleep.final)
unique(msleep$vore)
dat<-msleep
rm(list=ls())
options(stringsAsFactors = FALSE)
dat<-msleep
dat<-msleep
data()
msleep
data(msleep)
require(datasets)
data()
msleep
install.packages("dslabs")
library("dslabs")
data(package="dslabs")
data()
?msleep
??msleep
data(msleep)
rm(list=ls())
options(stringsAsFactors = FALSE)
dat<-msleep
#Mammal sleep dat
#Mammal sleep dataset
#Can be converted from a tibbel to a df
msleep<-as.data.frame(msleep)
library(dplyr)
library(readr)
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.delim)
myfiles = lapply(temp, read.csv)
setwd("~/Documents/github/Treetraits")
phenology<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
m(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/github/Treetraits")
area<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
head(area)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/github/Treetraits")
area<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
head(area)
d<-merge(area, mass, by=c(site,species,indiv.no,leaf.no))
unique(mass$site)
unique(area$site)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/github/Treetraits")
area<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
head(area)
d<-merge(area, mass, by=c(site,species,indiv.no,leaf.no))
unique(area$site)
area<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
head(area)
d<-merge(area, mass, by=c(site,species,indiv.no,leaf.no))
unique(area$site)
#Started January 2020
#aim: combining the leaf mass and area data with the stem wt and dbh data
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/github/Treetraits")
area<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
head(area)
d<-merge(area, mass, by=c(site,species,indiv.no,leaf.no))
d<-merge(area, mass, by=c("site","species","indiv.no","leaf.no"))
d<-merge(area, mass, by="site")
d<-merge(area, mass, by=c("site","species"))
d<-merge(area, mass, by=c("site","species"))
d<-merge(area, mass, by=c("site","species","indiv.no","leaf.no"))
#Started January 2020
#aim: combining the leaf mass and area data with the stem wt and dbh data
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/github/Treetraits")
area<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
head(area)
d<-merge(area, mass, by=c("site","species","indiv.no","leaf.no"))
d<-merge(area, mass, by=c("site","species","indiv.no","leaf.no"), na.rm=TRUE)
e<-join(area,mass, by=c("site","species","indiv.no","leaf.no"), na.rm=TRUE)
require(plyr)
e<-join(area,mass, by=c("site","species","indiv.no","leaf.no"), na.rm=TRUE)
e<-join(area,mass, by=c("site","species","indiv.no","leaf.no"))
View(e)
#Started January 2020
#aim: combining the leaf mass and area data with the stem wt and dbh data
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/github/Treetraits")
area<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
head(area)
d<-merge(area, mass, by=c("site","species","indiv.no","leaf.no"), na.rm=TRUE)
unique(area$site)
plot(area$area~area$site)
plot(area$area~area$site)
boxplot(area$area~area$site)
big<-subset(area, area>100)
big<-subset(area, area>600)
big
big<-subset(area, species=="acegla")
plot(big$area~big$indiv.no)
bigace<-subset(acegla,area>100)
bigace<-subset(acegla,area>100)
bigace<-subset(big,area>100)
bigace
unique(mass$species)
unique(area$species)
rm(list=ls())
options(stringsAsFactors = FALSE)
setwd("~/Documents/github/Treetraits")
area<-read.csv("data/western/leafarea_Oct162019.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
unique(mass$species)
head(area)
unique(area$species)
area<-read.csv("data/western/leafarea_Jan22_2020.csv", header=T, na.strings=c("","NA"))
head(area)
unique(area$species)
area<-read.csv("data/western/leafarea_Jan22_2020.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
unique(mass$species)
head(area)
unique(area$species)
area<-read.csv("data/western/leafarea_Jan22_2020.csv", header=T, na.strings=c("","NA"))
mass<-read.csv("data/western/traits_mass.csv", header=T, na.strings=c("","NA"))
head(mass)
unique(mass$species)
head(area)
unique(area$species)
setwd("~/Documents/github/pheno_bc/pheno_data")
d<-read.csv(bb_phenobc_obs_Jan25_2.csv)
d<-read.csv(bb_phenobc_obs_Jan25.csv)
d<-read.csv("bb_phenobc_obs_Jan25.csv")
head(d)
names(d)
d$label<-paste(d$population,d$treatment, sep="_")
names(d)
d$label<-paste(d$population,d$treatment,d$indiv,d$flask,d$species, sep="_")
d$bbch.t[d$label == "mp_LHH_NA_1_amealn"] <- 10000
head(d)
